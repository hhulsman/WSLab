

Documents\Visual Studio Code Projects\WSLab:		Código oficial, que va a github (HHulsman/WSLab)
Documents\Visual Studio Code Projects\WSLab\HHH:	Código específico HHH


Para empezar desde cero:

Tener descargado las ISO's de W2016, W2019, Win10, versiones evaluación, y sus Actualizaciones Cumulativas y Servicing Updates.


- Descargar proyecto desde https://github.com/microsoft/WSLab.github

	Abrir VSCode
	Cerrar Workspace si hay uno abierto
	
	# Initial setup
	Set-Location -Path "D:\Users\hhulsman\Documents\Visual Studio Code Projects"
	git clone https://github.com/microsoft/WSLab.git
	git remote rename origin upstream
	git remote add origin https://github.com/hhulsman/WSLab
	
	# Create new branch
	git pull upstream master                        # Actualizar por si acaso
	git checkout -b Localize						# Create local branch
	git remote push origin Localize					# Create remote branch
	git push --set-upstream origin Localize			# Config upstream for new branch



	# Setup on new machine, once the repository on Github exists
	Set-Location -Path "D:\Users\hhulsman\Documents\Visual Studio Code Projects"
	git clone https://github.com/microsoft/WSLab.git
	git remote rename origin upstream
	git remote add origin https://github.com/hhulsman/WSLab
	
	# Add branch Localize
	git pull origin Localize


	# Prepare files to modify
	Set-Location -Path "D:\Users\hhulsman\Documents\Visual Studio Code Projects\WSLab"
	mkdir HHH
	cd HHH
	copy ..\Scripts\*.*
	
	
	
# Preparar un Lab:

- A base de un LabConfig-WSLabx.ps1 en directorio HHH

- Copiar desde WSLab\HHH a destino (servidor Host):
	- Todo el contenido de HHH
	- Renombrar Labconfig-WSLabx.ps1 a LabConfig.ps1 en destino
	- Borrar resto ficheros LabConfig-WSLabx.ps1 en destino

En caso de que el lab se va a crear en un disco de un cluster de conmutación de error (C:\ClusterVolume):
	- Modificar en destino (cosas para futuras PRs):
		- 2_CreateParentDisks.ps1:
		  Cambiar $psscriptroot\Temp\Mountdir por $env:Temp\Mountdir (todas las ocurrencias)
		  Es porque Mount-WindowsImage (linea 535) da error si es sobre un disco de Failover Cluster)
	- Lo mismo en 3_Deploy.ps1

Cambiar en 3_Deploy.ps1:
	En línea 1326: Cambiar "Guest Service Interface" por "Interfaz de servicio invitado"


Ejecutar 1_Prereqs.ps1
Ejecutar 2_CreateParentDisks.ps1

Si se va a necesitar VMs con Windows 10:
	Ejecutar ParentDisks\CreateParentDisks.ps1 (fichero creado en el paso 2_CreateParentDisks)
	Cuando solicita el nombre del fichero a generar (por defecto sugiere Win10RS5_G2.vhdx, poner: Win10_G2.vhdx (no olvidar la extensión)

Ejecutar 3_Deploy.ps1 (o se habrá renombrado a Deploy.ps1?)
	Antes, cambiar "$PSScriptRoot\Temp\mountdir" por "$env:tmp\Temp\mountdir"
	Revisar LabConfig.ps1 por número de servidores y puestos de trabajo
	Se puede volver a ejecutar este script si posteriormente se quiere añadir más máquinas virtuales

Ejecutar 4_PostDeploy.ps1 (habilita RDP en DC)

Iniciar sesión en DC
Abrir Powershell ISE en modo admin
Arrancar las VMs S2D1 hasta S2D4
Copiar y ejecutar Scenario.ps1. Esto crea el clúster y S2D

Al final de las pruebas: Cleanup.ps1


Para crear un segundo lab:
- Ejecutar CreateParentDisks.ps1
- Mover directorio ParentDisks a otra ubicación, y especificar en el parámetro ServerParentPath en LabConfig
- Salvaguardar directorio Temp, ya que Deploy.ps1 lo destruye
- Copiar WSLab1 a WSLab2; sólo:
	- Directorio LAB\DC
	- Directorio Temp (opcional)
	- Scripts Deploy.ps1 (3_Deploy.ps1), Cleanup.ps1 y LabConfig.ps1
- Modificar LabConfig:
	- Cambiar prefijo WSLab1 por WSLab2
- Ejecutar todo a partir de Deploy.ps1
- NO ejecutar Deploy.ps1 para 2 Labs simultáneamente: $env:tmp\Temp\mountdir es el mismo



Para añadir máquinas Windows 10:
- Después de ejecutar 2_CreateParentDisks.ps1 se ha creado el fichero CreateParentDisk.ps1 en el directorio ParentDisks.
- Ejcutarlo, no requiere ningún LabConfig.ps1. Pide la ISO de Windows 10, y la edición de una lista
- Después se puede incluir la especificación en el fichero LabConfig.ps1, y volver a ejecutar Deploy.ps1. Se crearán automáticamente las VMs adicionales


Configurar Git Triangle Workflow:
(Pull from microsoft/WSLab (upstream) y push to hhulsman/WSlab (origin)):
        git config remote.pushdefault origin
        git config push.default current
